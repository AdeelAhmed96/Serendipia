{"ast":null,"code":"var _jsxFileName = \"/home/adeel/serendipia/House-detail/src/components/Slider.js\";\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\n/*const images = [\n    '//placekitten.com/1500/500',\n    '//placekitten.com/4000/3000',\n    '//placekitten.com/800/1200',\n    '//placekitten.com/1500/1500',\n];*/\n\nexport default class LightboxExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: this.props.open\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.open !== this.props.open) {\n      //Perform some operation\n      this.setState({\n        isOpen: nextProps\n      });\n    }\n  }\n\n  render() {\n    let _this$state = this.state,\n        photoIndex = _this$state.photoIndex,\n        isOpen = _this$state.isOpen;\n    const images = this.props.images;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, isOpen && React.createElement(Lightbox, {\n      mainSrc: images[photoIndex],\n      nextSrc: images[(photoIndex + 1) % images.length],\n      prevSrc: images[(photoIndex + images.length - 1) % images.length],\n      onCloseRequest: () => {\n        this.setState({\n          isOpen: false\n        });\n        this.props.change();\n      },\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + images.length - 1) % images.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % images.length\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/adeel/serendipia/House-detail/src/components/Slider.js"],"names":["React","Component","Lightbox","LightboxExample","constructor","props","state","photoIndex","isOpen","open","componentWillReceiveProps","nextProps","setState","render","images","length","change"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gCAAP,C,CAAyC;;AAEzC;;;;;;;AAOA,eAAe,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CADH;AAETC,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI;AAFV,KAAb;AAIH;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACF,IAAV,KAAiB,KAAKJ,KAAL,CAAWI,IAA/B,EAAoC;AAChC;AACA,WAAKG,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAEG;AAAT,OAAd;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AAAA,sBACwB,KAAKP,KAD7B;AAAA,QACCC,UADD,eACCA,UADD;AAAA,QACaC,MADb,eACaA,MADb;AAEL,UAAMM,MAAM,GAAG,KAAKT,KAAL,CAAWS,MAA1B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKN,MAAM,IACH,oBAAC,QAAD;AACI,MAAA,OAAO,EAAEM,MAAM,CAACP,UAAD,CADnB;AAEI,MAAA,OAAO,EAAEO,MAAM,CAAC,CAACP,UAAU,GAAG,CAAd,IAAmBO,MAAM,CAACC,MAA3B,CAFnB;AAGI,MAAA,OAAO,EAAED,MAAM,CAAC,CAACP,UAAU,GAAGO,MAAM,CAACC,MAApB,GAA6B,CAA9B,IAAmCD,MAAM,CAACC,MAA3C,CAHnB;AAII,MAAA,cAAc,EAAE,MAAI;AAChB,aAAKH,QAAL,CAAc;AAACJ,UAAAA,MAAM,EAAE;AAAT,SAAd;AACA,aAAKH,KAAL,CAAWW,MAAX;AACH,OAPL;AAQI,MAAA,iBAAiB,EAAE,MACf,KAAKJ,QAAL,CAAc;AACVL,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAGO,MAAM,CAACC,MAApB,GAA6B,CAA9B,IAAmCD,MAAM,CAACC;AAD5C,OAAd,CATR;AAaI,MAAA,iBAAiB,EAAE,MACf,KAAKH,QAAL,CAAc;AACVL,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAG,CAAd,IAAmBO,MAAM,CAACC;AAD5B,OAAd,CAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CADJ;AA0BH;;AA/CkD","sourcesContent":["import React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\n/*const images = [\n    '//placekitten.com/1500/500',\n    '//placekitten.com/4000/3000',\n    '//placekitten.com/800/1200',\n    '//placekitten.com/1500/1500',\n];*/\n\nexport default class LightboxExample extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            photoIndex: 0,\n            isOpen: this.props.open,\n        };\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.open!==this.props.open){\n            //Perform some operation\n            this.setState({isOpen: nextProps });\n        }\n    }\n\n    render() {\n        let { photoIndex, isOpen } = this.state;\n        const images = this.props.images\n\n        return (\n            <div>\n\n                {isOpen && (\n                    <Lightbox\n                        mainSrc={images[photoIndex]}\n                        nextSrc={images[(photoIndex + 1) % images.length]}\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                        onCloseRequest={()=>{\n                            this.setState({isOpen: false})\n                            this.props.change()\n                        }}\n                        onMovePrevRequest={() =>\n                            this.setState({\n                                photoIndex: (photoIndex + images.length - 1) % images.length,\n                            })\n                        }\n                        onMoveNextRequest={() =>\n                            this.setState({\n                                photoIndex: (photoIndex + 1) % images.length,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}