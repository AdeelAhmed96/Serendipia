{"ast":null,"code":"var _jsxFileName = \"/home/adeel/serendipia/House-detail/src/components/Slider.js\";\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\nconst images = ['//placekitten.com/1500/500', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\nexport default class LightboxExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: this.props.open\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.open !== prevState.isOpen) {\n      return {\n        isOpen: nextProps.open\n      };\n    } else return null;\n  }\n\n  render() {\n    let _this$state = this.state,\n        photoIndex = _this$state.photoIndex,\n        isOpen = _this$state.isOpen;\n    isOpen = this.props.open;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, isOpen && React.createElement(Lightbox, {\n      mainSrc: images[photoIndex],\n      nextSrc: images[(photoIndex + 1) % images.length],\n      prevSrc: images[(photoIndex + images.length - 1) % images.length],\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + images.length - 1) % images.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % images.length\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/adeel/serendipia/House-detail/src/components/Slider.js"],"names":["React","Component","Lightbox","images","LightboxExample","constructor","props","state","photoIndex","isOpen","open","getDerivedStateFromProps","nextProps","prevState","render","length","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gCAAP,C,CAAyC;;AAEzC,MAAMC,MAAM,GAAG,CACX,4BADW,EAEX,6BAFW,EAGX,4BAHW,EAIX,6BAJW,CAAf;AAOA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CADH;AAETC,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI;AAFV,KAAb;AAIH;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAqD;AACjD,QAAGD,SAAS,CAACF,IAAV,KAAiBG,SAAS,CAACJ,MAA9B,EAAqC;AACjC,aAAO;AAAEA,QAAAA,MAAM,EAAEG,SAAS,CAACF;AAApB,OAAP;AACH,KAFD,MAGK,OAAO,IAAP;AACR;;AAEDI,EAAAA,MAAM,GAAG;AAAA,sBACwB,KAAKP,KAD7B;AAAA,QACCC,UADD,eACCA,UADD;AAAA,QACaC,MADb,eACaA,MADb;AAELA,IAAAA,MAAM,GAAG,KAAKH,KAAL,CAAWI,IAApB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,IACH,oBAAC,QAAD;AACI,MAAA,OAAO,EAAEN,MAAM,CAACK,UAAD,CADnB;AAEI,MAAA,OAAO,EAAEL,MAAM,CAAC,CAACK,UAAU,GAAG,CAAd,IAAmBL,MAAM,CAACY,MAA3B,CAFnB;AAGI,MAAA,OAAO,EAAEZ,MAAM,CAAC,CAACK,UAAU,GAAGL,MAAM,CAACY,MAApB,GAA6B,CAA9B,IAAmCZ,MAAM,CAACY,MAA3C,CAHnB;AAII,MAAA,cAAc,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAE;AAAV,OAAd,CAJ1B;AAKI,MAAA,iBAAiB,EAAE,MACf,KAAKO,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAGL,MAAM,CAACY,MAApB,GAA6B,CAA9B,IAAmCZ,MAAM,CAACY;AAD5C,OAAd,CANR;AAUI,MAAA,iBAAiB,EAAE,MACf,KAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAG,CAAd,IAAmBL,MAAM,CAACY;AAD5B,OAAd,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ;AAsBH;;AA3CkD","sourcesContent":["import React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\nconst images = [\n    '//placekitten.com/1500/500',\n    '//placekitten.com/4000/3000',\n    '//placekitten.com/800/1200',\n    '//placekitten.com/1500/1500',\n];\n\nexport default class LightboxExample extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            photoIndex: 0,\n            isOpen: this.props.open,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.open!==prevState.isOpen){\n            return { isOpen: nextProps.open};\n        }\n        else return null;\n    }\n\n    render() {\n        let { photoIndex, isOpen } = this.state;\n        isOpen = this.props.open\n\n        return (\n            <div>\n                {isOpen && (\n                    <Lightbox\n                        mainSrc={images[photoIndex]}\n                        nextSrc={images[(photoIndex + 1) % images.length]}\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                        onCloseRequest={() => this.setState({ isOpen: false })}\n                        onMovePrevRequest={() =>\n                            this.setState({\n                                photoIndex: (photoIndex + images.length - 1) % images.length,\n                            })\n                        }\n                        onMoveNextRequest={() =>\n                            this.setState({\n                                photoIndex: (photoIndex + 1) % images.length,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}